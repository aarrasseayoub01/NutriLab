import Head from "next/head";
import { BsGoogle, BsFacebook, BsTwitter } from "react-icons/bs";
import axios from "axios";
import { useState } from "react";
export default function Login({ setLogin, setAuth, setOpen }) {
  const [user, setUser] = useState({
    email: "",
    password: "",
  });
  const [error, setError] = useState({ email: "", password: "" });

  const handleSubmit = async (e) => {
    event.preventDefault();

    const data = {
      email: user.email,
      password: user.password,
    };
    await axios
      .post("/api/login", data, {
        headers: {
          "Content-Type": "application/json",
        },
      })
      .then(async (response) => {
        console.log(response.data);
        setAuth(response.data);
        setOpen(false);
        const dietInfos = await axios.get("/api/profile").then((res) => {
          localStorage.setItem("dietInfos", JSON.stringify(res.data));
        });
      })
      .catch((error) => {
        error.response.status === 401
          ? setError({ email: error.response.data.message })
          : setError({ password: error.response.data.message });
      });
  };
  return (
    <div className="">
      <Head>
        <title>NutriLab - Login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="px-8 py-6 text-left bg-white shadow-lg ">
        <div className="flex justify-around">
          <button>
            <BsGoogle size="3rem" color="blue" />
          </button>
          <button>
            <BsFacebook size="3rem" color="blue" />
          </button>
          <button>
            <BsTwitter size="3rem" color="blue" />
          </button>
        </div>
        <div className="bg-blue-600 w-full h-1 mt-7 mb-3"></div>
        <h3 className="text-2xl font-bold text-center">Welcome back!</h3>
        <form action="">
          <div className="mt-4">
            <div className="flex flex-row relative">
              <div className=" basis-1/4 flex items-center">
                <label className="text-center" htmlFor="Email">
                  Email
                </label>
              </div>
              <input
                onFocus={() => setError({ email: "", password: "" })}
                type="text"
                placeholder="Email"
                value={user.email}
                onChange={(e) => setUser({ ...user, email: e.target.value })}
                className={
                  "basis-3/4 w-max px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-600" +
                  (error.email && "border-3 border-rose-500")
                }
              />
              {error.email && (
                <p className="text-rose-500 absolute left-20 -top-3 sm:-top-4 sm:left-32 text-xs sm:text-sm">
                  {error.email}
                </p>
              )}
            </div>
            <div className="mt-4 flex flex-row relative">
              <div className=" basis-1/4 flex items-center">
                <label className=" text-center">Password</label>
              </div>
              <input
                onFocus={() => setError({ email: "", password: "" })}
                type="password"
                placeholder="Password"
                onChange={(e) => setUser({ ...user, password: e.target.value })}
                className=" basis-3/4 w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-1 focus:ring-blue-600"
              />
              {error.password && (
                <p className="text-rose-500 absolute left-20 -top-3 sm:-top-4 sm:left-32 text-xs sm:text-sm">
                  {error.password}
                </p>
              )}
            </div>

            {/* <span className="text-xs text-red-400">
                Password must be same!
              </span> */}
            <div className="flex">
              <button
                onClick={handleSubmit}
                className="w-full px-6 py-2 mt-4 text-white bg-blue-600 rounded-lg hover:bg-blue-900"
              >
                Login to Account
              </button>
            </div>
            <div className="mt-6 text-grey-dark">
              Don't have an account?
              <button
                className="text-blue-600 hover:underline"
                onClick={() => setLogin(false)}
              >
                Sign up
              </button>
            </div>
          </div>
        </form>
      </div>
      {/* <Navbar />
      <Hero />
      <PickOne reload={() => router.push("/Loading")} ayoub="ayoub" />
      <Footer /> */}
    </div>
  );
}
