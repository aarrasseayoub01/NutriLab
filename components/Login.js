import Head from "next/head";
import { BsGoogle, BsFacebook, BsTwitter } from "react-icons/bs";
import axios from "axios";
import { User_data } from "../context/context";
import { useContext } from "react";
import { useState } from "react";
import { useSession, signIn } from "next-auth/react";

export default function Login({ setLogin, setAuth, setOpen }) {
  const { setUser } = useContext(User_data);
  const [user, setUser1] = useState({
    email: "",
    password: "",
  });
  const [error, setError] = useState({ email: "", password: "" });

  const handleSubmit = async (e) => {
    e.preventDefault();

    const data = {
      email: user.email,
      password: user.password,
    };
    await axios
      .post("/api/login", data, {
        headers: {
          "Content-Type": "application/json",
        },
      })
      .then(async (response) => {
        setAuth(response.data);
        setOpen(false);

        setUser(response.data);
      })
      .catch((error) => {
        error.response.status === 401
          ? setError({ email: error.response.data.message })
          : setError({ password: error.response.data.message });
      });
  };
  return (
    <>
      <Head>
        <title>NutriLab - Login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="https://i.ibb.co/yhHmPr0/orange-slice.png" />
      </Head>
      <div className="bg-white px-8 py-6 text-left shadow-lg ">
        <div className="flex justify-around">
          <button
            className="transition duration-300 ease-out hover:scale-125"
            onClick={() => signIn("google")}
          >
            <BsGoogle className="h-12 w-12 fill-orange-400 hover:fill-orange-600" />
          </button>
          <button
            className="transition duration-300 ease-out hover:scale-125"
            onClick={() => signIn("facebook")}
          >
            <BsFacebook className="h-12 w-12 fill-orange-400 hover:fill-orange-600" />
          </button>
          <button className="transition duration-300 ease-out hover:scale-125">
            <BsTwitter className="h-12 w-12 fill-orange-400 hover:fill-orange-600" />
          </button>
        </div>
        <div className="mt-7 mb-3 h-1 w-full bg-orange-400"></div>
        <h3 className="text-center text-2xl font-bold">Welcome back!</h3>
        <form action="">
          <div className="mt-4">
            <div className="relative flex flex-row">
              <div className=" flex basis-1/4 items-center">
                <label className="text-center" htmlFor="Email">
                  Email
                </label>
              </div>
              <input
                onFocus={() => setError({ email: "", password: "" })}
                type="text"
                placeholder="Email"
                value={user.email}
                onChange={(e) => setUser1({ ...user, email: e.target.value })}
                className={
                  "mt-2 w-max basis-3/4 rounded-md border px-4 py-2 focus:outline-none focus:ring-1 focus:ring-blue-600" +
                  (error.email && "border-3 border-rose-500")
                }
              />
              {error.email && (
                <p className="absolute left-20 -top-3 text-xs text-rose-500 sm:-top-4 sm:left-32 sm:text-sm">
                  {error.email}
                </p>
              )}
            </div>
            <div className="relative mt-4 flex flex-row">
              <div className=" flex basis-1/4 items-center">
                <label className=" text-center">Password</label>
              </div>
              <input
                onFocus={() => setError({ email: "", password: "" })}
                type="password"
                placeholder="Password"
                onChange={(e) =>
                  setUser1({ ...user, password: e.target.value })
                }
                className=" mt-2 w-full basis-3/4 rounded-md border px-4 py-2 focus:outline-none focus:ring-1 focus:ring-blue-600"
              />
              {error.password && (
                <p className="absolute left-20 -top-3 text-xs text-rose-500 sm:-top-4 sm:left-32 sm:text-sm">
                  {error.password}
                </p>
              )}
            </div>

            <div className="flex">
              <button
                onClick={handleSubmit}
                className="mt-4 w-full rounded-lg bg-orange-400 px-6 py-2 text-white hover:bg-orange-600"
              >
                Login to Account
              </button>
            </div>
            <div className="text-grey-dark mt-6">
              Don&apos;t have an account?
              <button
                className="text-orange-600 hover:underline"
                onClick={() => setLogin(false)}
              >
                Sign up
              </button>
            </div>
          </div>
        </form>
      </div>
    </>
  );
}
