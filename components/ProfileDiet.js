import Head from "next/head";
import Image from 'next/image';
import { useState } from "react";
import { IoMdFemale, IoMdMale } from "react-icons/io";


const ProfileDiet = () => {
    const [dietInfos, setDietInfos] = useState({
      age: null,
      sex: 'male',
      height: null,
      weight: null,
      activity: 'none',
      plan: 'none'
    });

    // Check on inputted numbers to not include 'e', '-', '+' and '.'
    const handleNumberChange = (e) => {
      const add = e.target.value.slice(-1);
      const rest = e.target.value.slice(0, -1);
      if (add === '0' || 
          add === '1' || 
          add === '2' || 
          add === '3' || 
          add === '4' || 
          add === '5' || 
          add === '6' || 
          add === '7' || 
          add === '8' ||  
          add === '9'
      ) {
        setDietInfos({...dietInfos, [e.target.name]: e.target.value});
      } else {
        setDietInfos({...dietInfos, [e.target.name]: rest});
      }
    }

    console.log(dietInfos)

  return (
    <>
      <Head>
        <title>NutriLab - Profile Diet</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="https://i.ibb.co/yhHmPr0/orange-slice.png" />
      </Head>
      <div className="md:w-1/2 flex flex-col justify-start items-center">
        <div className="flex justify-center items-center my-16">
          <Image
            width={500}
            height={500}
            className="rounded-full w-64 h-64 object-center object-cover"
            src="/test.png"
          />
        </div>

        {/* Age  */}
        <div className="w-full md:w-2/3 my-2 relative">
          <input
            id="age"
            className="block px-2.5 pb-2.5 pt-4 w-full text-sm text-white bg-transparent rounded-lg border-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-custom-orange focus:outline-none focus:ring-0 focus:border-custom-orange peer"
            name='age'
            value={dietInfos.age}
            onChange={handleNumberChange}
          />
          <label
            htmlFor="age"
            className="absolute hover:cursor-text text-sm text-white dark:text-gray-400 duration-300 transform -translate-y-4 scale-75 top-2 z-10 origin-[0] bg-[#4B4B4B] dark:bg-gray-900 px-2 peer-focus:px-2 peer-focus:text-custom-orange peer-focus:dark:text-custom-orange peer-placeholder-shown:scale-100 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:top-1/2 peer-focus:top-2 peer-focus:scale-75 peer-focus:-translate-y-4 left-1"
          >
            Age
          </label>
        </div>

        {/* Sex  */}
        <div className="w-full md:w-2/3 my-2 relative">
          <ul className="grid w-full gap-6 md:grid-cols-2">
            <li>
              <input
                type="radio"
                id="male"
                name="sex"
                //   value={dietInfos.sex}
                //   onChange={() => handleSex("male")}
                className="hidden peer"
                required
              />
              <label
                htmlFor="male"
                className="
                              inline-flex items-center justify-evenly w-full py-5 px-2 
                              text-gray-500 bg-white hover:text-gray-600 hover:bg-gray-100
                              peer-checked:border-2 border-gray-200 
                              rounded-lg 
                              cursor-pointer 
                              peer-checked:border-blue-500 peer-checked:text-blue-500 
                            "
              >
                <IoMdMale size={35} className="w-1/3" />
                <div className="block">
                  <div className="w-2/3 text-lg font-semibold">Male</div>
                </div>
              </label>
            </li>
            <li>
              <input
                type="radio"
                id="female"
                name="sex"
                //   value={dietInfos.sex}
                //   onChange={() => handleSex("female")}
                className="hidden peer"
              />
              <label
                htmlFor="female"
                className="
                              inline-flex items-center justify-evenly w-full py-5 px-2 
                              text-gray-500 bg-white hover:text-gray-600 hover:bg-gray-100
                              peer-checked:border-2 border-gray-200 
                              rounded-lg 
                              cursor-pointer 
                              peer-checked:border-pink-500 peer-checked:text-pink-500 
                            "
              >
                <IoMdFemale size={35} className="w-1/3" />
                <div className="block">
                  <div className="w-2/3 text-lg font-semibold">Female</div>
                </div>
              </label>
            </li>
          </ul>
        </div>

        {/* Height  */}
        <div className="w-full md:w-2/3 my-2 relative">
          <input
            id="height"
            className="block px-2.5 pb-2.5 pt-4 w-full text-sm text-white bg-transparent rounded-lg border-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-custom-orange focus:outline-none focus:ring-0 focus:border-custom-orange peer"
            name='height'
            value={dietInfos.height}
            onChange={handleNumberChange}
          />
          <label
            htmlFor="height"
            className="absolute hover:cursor-text text-sm text-white dark:text-gray-400 duration-300 transform -translate-y-4 scale-75 top-2 z-10 origin-[0] bg-[#4B4B4B] dark:bg-gray-900 px-2 peer-focus:px-2 peer-focus:text-custom-orange peer-focus:dark:text-custom-orange peer-placeholder-shown:scale-100 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:top-1/2 peer-focus:top-2 peer-focus:scale-75 peer-focus:-translate-y-4 left-1"
          >
            Height
          </label>
        </div>

        {/* Weight  */}
        <div className="w-full md:w-2/3 my-2 relative">
          <input
            id="weight"
            className="block px-2.5 pb-2.5 pt-4 w-full text-sm text-white bg-transparent rounded-lg border-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-custom-orange focus:outline-none focus:ring-0 focus:border-custom-orange peer"
            name='weight'
            value={dietInfos.weight}
            onChange={handleNumberChange}
          />
          <label
            htmlFor="weight"
            className="absolute hover:cursor-text text-sm text-white dark:text-gray-400 duration-300 transform -translate-y-4 scale-75 top-2 z-10 origin-[0] bg-[#4B4B4B] dark:bg-gray-900 px-2 peer-focus:px-2 peer-focus:text-custom-orange peer-focus:dark:text-custom-orange peer-placeholder-shown:scale-100 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:top-1/2 peer-focus:top-2 peer-focus:scale-75 peer-focus:-translate-y-4 left-1"
          >
            Weight
          </label>
        </div>

        {/* Activity  */}
        <div className="w-full md:w-2/3 my-2 relative">
          <select
            id="activity"
            className="
                                              peer 
                                              hover:cursor-pointer 
                                              px-2.5 pb-2.5 pt-4 w-full 
                                              text-sm text-white 
                                              bg-transparent rounded-lg border-2 border-gray-300 
                                              appearance-none 
                                              dark:text-white dark:border-gray-600 dark:focus:border-custom-orange 
                                              focus:outline-none focus:ring-0 focus:border-custom-orange
                                            "
          >
            <option className="text-black" value="none" selected>
              -
            </option>
            <option className="text-black" value="sedentary">
              Sedentary
            </option>
            <option className="text-black" value="lightly_active">
              Lightly Active
            </option>
            <option className="text-black" value="moderately_active">
              Moderately Active
            </option>
            <option className="text-black" value="very_active">
              Very Active
            </option>
            <option className="text-black" value="super_active">
              Super Active
            </option>
          </select>
          <label
            htmlFor="activity"
            className="
                                                  absolute top-2 left-1 z-10
                                                  text-sm text-white dark:text-gray-400 
                                                  duration-300 transform -translate-y-4 scale-75 origin-[0]
                                                  bg-[#4B4B4B] dark:bg-gray-900 px-2 
                                                  peer-focus:text-custom-orange
                                                  peer-focus:px-2 peer-focus:top-2 peer-focus:scale-75 peer-focus:-translate-y-4 
                                                  peer-placeholder-shown:scale-100 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:top-1/2 
                                                "
          >
            Activity
          </label>
        </div>

        {/* Plan  */}
        <div className="w-full md:w-2/3 my-2 relative">
          <select
            id="plan"
            className="
                                            peer
                                            hover:cursor-pointer 
                                            px-2.5 pb-2.5 pt-4 w-full 
                                            text-sm text-white 
                                            bg-transparent rounded-lg border-2 border-gray-300 
                                            appearance-none 
                                            dark:text-white dark:border-gray-600 dark:focus:border-custom-orange 
                                            focus:outline-none focus:ring-0 focus:border-custom-orange peer
                                        "
          >
            <option className="text-black" value="none" selected>
              -
            </option>
            <option className="text-black" value="lose_weight">
              Lose Weight
            </option>
            <option className="text-black" value="maintain">
              Maintain
            </option>
            <option className="text-black" value="build_muscle">
              Build Muscle
            </option>
          </select>
          <label
            htmlFor="plan"
            className="
                                              absolute top-2 left-1 z-10
                                              text-sm text-white dark:text-gray-400
                                              duration-300 transform -translate-y-4 scale-75 origin-[0]
                                              bg-[#4B4B4B] dark:bg-gray-900 px-2
                                              peer-focus:px-2 peer-focus:text-custom-orange peer-focus:dark:text-custom-orange peer-placeholder-shown:scale-100 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:top-1/2 peer-focus:top-2 peer-focus:scale-75 peer-focus:-translate-y-4
                                            "
          >
            Plan
          </label>
        </div>

        {/* Submit  */}
        <div className="w-full md:w-2/3 my-4">
          <button
            type="button"
            className="text-gray-700 hover:text-black border-2 border-[#4B4B4B] bg-custom-orange transition hover:border-black focus:outline-none focus:ring-4 focus:ring-[#FFBB99] font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-gray-800 dark:hover:bg-gray-700 dark:focus:ring-gray-700 dark:border-gray-700"
          >
            Edit
          </button>
        </div>
      </div>
    </>
  );
}

export default ProfileDiet