import axios from "axios";
import Head from "next/head";
import Image from "next/image";
import { useContext, useEffect, useState } from "react";

import { BiUserCircle } from "react-icons/bi";
import { IoMdInformationCircleOutline } from "react-icons/io";
import { MdPassword } from "react-icons/md";

import Navbar from "../components/Navbar";
import ProfileDiet from "../components/Profile/ProfileDiet";
import ProfilePage from "../components/Profile/ProfilePage";
import ProfilePassword from "../components/Profile/ProfilePassword";
import { User_data } from "../context/context";

const Profile = () => {
  const { user, setUser } = useContext(User_data);
  const [page, setPage] = useState(1);
  const [profile, setProfile] = useState();
  const [render, setRender] = useState(false);
  const [requestState, setRequestState] = useState({
    profile: [2, ''],
    diet: [2, ''],
    password: [2, ''],
  });

  useEffect(() => {
    const fetchProfile = async () => {
      const res = await axios.get("/api/profile");
      setProfile(res.data);
    };
    fetchProfile();
    setRender(false);
  }, [render]);

  const submitProfile = async (profileData) => {
    await axios.put('api/profile', {type: 'profile', data: profileData})
      .then((response)=>{
        setRender(true);
        setRequestState({...requestState, profile: [1, response.data.message]});
      })
      .catch(err => {
        setRequestState({...requestState, profile: [0, err.response.data.message]});
      });
  }

  const submitDiet = async (dietData) => {
    await axios.put('api/profile', {type: 'diet', data: dietData})
      .then((response)=>{
        setRender(true);
        setRequestState({...requestState, diet: [1, response.data.message]});
      })
      .catch(err => {
        setRequestState({...requestState, diet: [0, err.response.data.message]});
      });
  }

  const submitPassword = async (passwordData) => {
    await axios.put('api/profile', {type: 'password', data: passwordData})
      .then((response)=>{
        setRender(true);
        setRequestState({...requestState, password: [1, response.data.message]});
      })
      .catch(err => {
        setRequestState({...requestState, password: [0, err.response.data.message]});
      });
  }

  setTimeout(()=>{
    setRequestState({
      profile: [2, ''],
      diet: [2, ''],
      password: [2, '']
    });
  }, 3000);
  return (
    <>
      <Head>
        <title>NutriLab - Profile Page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="https://i.ibb.co/yhHmPr0/orange-slice.png" />
      </Head>

      {/* <Navbar /> */}
      <Navbar User={user} />

      {/* Profile Page  */}
      <div className="flex flex-col-reverse md:grid md:grid-cols-12">
        <div className="col-span-3 flex md:min-h-screen flex-col items-center justify-start border-t-4 md:border-r-4 md:border-t-0 border-custom-orange bg-profile2">
          {profile ? (
            <div className="sticky top-[68px] left-0 hidden md:flex flex-col lg:flex-row w-full items-center justify-center space-x-6 bg-profile1 py-4">
              <Image
                width={100}
                height={100}
                priority
                className="h-20 w-20 rounded-full object-cover object-center"
                src={(profile && profile.image) || "/user.png"}
                alt="Profile"
              />
              <div className="flex flex-col items-start justify-center">
                <p className="font-logo text-xl font-semibold text-white">
                  {profile.name}
                </p>
                <p className="font-logo text-sm text-white">
                  Your personal account
                </p>
              </div>
            </div>
          ) : (
            <div className="sticky top-[68px] left-0 hidden md:flex flex-col md:flex-row w-full items-center justify-center space-x-6 bg-profile1 py-4">
              <div className="h-20 w-20 animate-pulse rounded-full bg-gray-200"></div>
              <div className="flex animate-pulse flex-col items-start justify-center">
                <div className="dark:bg-gray-700 mb-4 h-5 w-40 rounded-full bg-gray-200"></div>
                <div className="dark:bg-gray-700 mb-2.5 h-3 w-40 max-w-[480px] rounded-full bg-gray-200"></div>
              </div>
              <span className="sr-only">Loading...</span>
            </div>
          )}
          <div className="fixed bottom-0 z-50 md:sticky md:top-[228px] lg:top-[180px] left-0 flex md:flex-col items-center justify-start w-full p-2 md:py-8 bg-profile1 md:bg-transparent">
            <div
              className="group flex flex-col-reverse md:flex-row h-full md:h-9 w-10/12 md:space-x-2"
              onClick={() => setPage(1)}
            >
              <div
                className={
                  "h-2 md:h-5/6 w-5/6 md:w-2 origin-right md:origin-bottom self-center border-b-4 md:border-r-4 md:border-b-0 border-custom-orange transition duration-200 ease-[cubic-bezier(1,-0.4,1,.65)] " +
                  (page === 1
                    ? "-translate-x-0 md:translate-x-0 md:-translate-y-0 opacity-100"
                    : "translate-x-40 md:translate-x-0 md:translate-y-10 opacity-0")
                }
              ></div>
              <div
                className="
                            flex flex-col md:flex-row h-full w-full
                            cursor-pointer items-center
                            justify-start rounded-lg
                            hover:bg-profilehover
                          "
              >
                <BiUserCircle className="mx-4 h-6 w-6 fill-[#C8C8C8]" />
                <p className="font-logo text-sm text-[#C8C8C8] hidden xs:block">
                  Profile page
                </p>
                <p className="font-logo text-sm text-[#C8C8C8] block xs:hidden">
                  Profile 
                </p>
              </div>
            </div>
            <div
              className="group flex flex-col-reverse md:flex-row h-full md:h-9 w-10/12 md:space-x-2"
              onClick={() => setPage(2)}
            >
              <div
                className={
                  "h-2 md:h-5/6 w-5/6 md:w-2 origin-center self-center border-b-4 md:border-r-4 md:border-b-0 border-custom-orange transition duration-200 ease-[cubic-bezier(1,-0.4,1,.65)] " +
                  (page === 2 ? "scale-x-100 md:scale-y-100" : "scale-x-0 md:scale-x-100 md:scale-y-0")
                }
              ></div>
              <a
                href="#dietInformations"
                className="
                                    flex flex-col md:flex-row h-full w-full
                                    cursor-pointer items-center
                                    justify-start rounded-lg
                                    hover:bg-profilehover
                                    "
              >
                <IoMdInformationCircleOutline className="mx-4 h-6 w-6 fill-[#C8C8C8]" />
                <p className="font-logo text-sm text-[#C8C8C8] hidden xs:block">
                  Diet informations
                </p>
                <p className="font-logo text-sm text-[#C8C8C8] block xs:hidden">
                  Diet
                </p>
              </a>
            </div>
            <div
              className="group flex flex-col-reverse md:flex-row h-full md:h-9 w-10/12 md:space-x-2"
              onClick={() => setPage(3)}
            >
              <div
                className={
                  "h-2 md:h-5/6 w-5/6 md:w-2 origin-left md:origin-top self-center border-b-4 md:border-r-4 md:border-b-0 border-custom-orange transition duration-200 ease-[cubic-bezier(1,-0.4,1,.65)] " +
                  (page === 3
                    ? "-translate-x-0 md:translate-x-0 md:-translate-y-0 opacity-100"
                    : "-translate-x-40 md:translate-x-0 md:-translate-y-10 opacity-0")
                }
              ></div>
              <div
                className="
                                    flex flex-col md:flex-row h-full w-full
                                    cursor-pointer items-center
                                    justify-start rounded-lg
                                    hover:bg-profilehover
                                    "
              >
                <MdPassword className="mx-4 h-6 w-6 fill-[#C8C8C8]" />
                <p className="font-logo text-sm text-[#C8C8C8] hidden xs:block">
                  Change password
                </p>
                <p className="font-logo text-sm text-[#C8C8C8] block xs:hidden">
                  Password
                </p>
              </div>
            </div>
          </div>
        </div>

        <div className="mb-16 col-span-9 col-start-4 flex h-full w-full flex-col items-center justify-start bg-profile2">
          <div className="flex flex-col items-center justify-start md:w-1/2">
            <div className="my-16 flex items-center justify-center">
              <Image
                width={500}
                height={500}
                className="h-64 w-64 rounded-full object-cover object-center"
                src={(profile && profile.image) || "/user.png"}
                alt="Profile"
              />
            </div>
            {profile ? (
              <>
                {page === 1 && (
                  <ProfilePage
                    profileData={{
                      email: profile.email,
                      name: profile.name,
                    }}
                    submitProfile={submitProfile}
                    requestState={requestState.profile}
                  />
                )}
                {page === 2 && (
                  <ProfileDiet
                    dietData={{
                      age: profile.age,
                      sex: profile.sex,
                      height: profile.height,
                      weight: profile.weight,
                      activity: profile.activity,
                      plan: profile.plan
                    }}
                    submitDiet={submitDiet}
                    requestState={requestState.diet}
                  />
                )}
                {page === 3 && 
                  (<ProfilePassword 
                    submitPassword={submitPassword}
                    requestState={requestState.password}
                  />
                )}
              </>
            ) : (
              <div className="flex animate-pulse flex-col items-start justify-center">
                <div className="dark:bg-gray-700 my-2 h-12 w-[280px] rounded-lg bg-gray-200"></div>
                <div className="dark:bg-gray-700 my-2 h-12 w-[280px] rounded-lg bg-gray-200"></div>
                <div className="dark:bg-gray-700 my-6 h-12 w-[69px] rounded-lg bg-gray-200"></div>
              </div>
            )}
          </div>
        </div>
      </div>
    </>
  );
};

export default Profile;
